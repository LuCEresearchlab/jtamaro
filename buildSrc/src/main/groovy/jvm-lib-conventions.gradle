plugins {
  id "java-library"
  id "maven-publish"
  id "signing"
}

group = 'jtamaro'
version = '25.0.0'

repositories {
  mavenCentral()
}

dependencies {
  testImplementation libs.junit
}

java {
  withJavadocJar()
  withSourcesJar()

  sourceCompatibility = 17
  targetCompatibility = 17
}

javadoc {
  options.memberLevel = JavadocMemberLevel.PUBLIC
  options.addStringOption "Xdoclint:all,-missing", "-quiet"
  options.addBooleanOption "html5", true

  configure(options) {
    tags(
        "apiNote:a:API Note:",
        "implSpec:a:Implementation Requirements:",
        "implNote:a:Implementation Note:",
    )
  }
}

compileJava {
  options.compilerArgs << "-Xlint:unchecked"
}

tasks.withType(AbstractArchiveTask).configureEach {
  preserveFileTimestamps = false
  reproducibleFileOrder = true
}

def localProps = new Properties()
def localPropsFile = project.rootProject.file "local.properties"
if (localPropsFile.exists()) {
  localProps.load localPropsFile.newDataInputStream()
}

String getArtifactName() {
  def result = "${project.name}"
  def itr = project.parent
  while (itr != null && itr != rootProject) {
    result = "${itr.name}-${result}"
    itr = itr.parent
  }
  return result
}

publishing {
  repositories {
    maven {
      name = "Central"
      url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials {
        username = localProps.getProperty "repo.central.username", ""
        password = localProps.getProperty "repo.central.password", ""
      }
    }
  }

  publications {
    mavenJava(MavenPublication) {
      artifactId = artifactName
      groupId = "jtamaro"
      setVersion project.version

      from components.java
      versionMapping {
        usage("java-api") {
          fromResolutionOf "runtimeClasspath"
        }
        usage("java-runtime") {
          fromResolutionResult()
        }
      }
      pom {
        name = "Jtamaro - " + artifactName
        description = ""
        url = "https://github.com/LuCEresearchlab/jtamaro"
        developers {
          developer {
            name = "hauswirth"
          }
          developer {
            name = "bvlj"
          }
        }
        licenses {
            license {
                name = "MIT"
                url = "https://opensource.org/license/MIT"
            }
        }
        scm {
          connection = "scm:git:git://github.com/LuCEresearchlab/jtamaro.git"
          developerConnection = "scm:git:git://github.com/LuCEresearchlab/jtamaro.git"
          url = "https://github.com/LuCEresearchlab/jtamaro/tree/main"
        }
      }
    }
  }
}

signing {
  def signingKeyPath = localProps.getProperty "signing.secretKeyFile", ""
  if (signingKeyPath == "") {
    required { false }
  } else {
    required { true }

    def signingPassword = localProps.getProperty "signing.password", ""
    def signingKeyFile = file(rootProject.rootDir.absolutePath + "/" + signingKeyPath)

    if (signingKeyFile.exists()) {
      useInMemoryPgpKeys signingKeyFile.text, signingPassword
    }
  }
  sign publishing.publications.mavenJava
}

